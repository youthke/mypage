{"version":3,"sources":["img/violet-image-mypage.png","img/questack-home.png","img/questions.png","component/Header.js","component/About.js","component/products/Violet.js","component/Contact.js","component/products/Questack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","SubMenu","Menu","theme","mode","Item","to","title","About","Title","Typography","Content","Footer","style","width","backgroundColor","textAlign","type","margin","justify","span","level","marginLeft","marginBottom","Violet","src","image1","height","Contact","href","Questack","homeImage","questionImage","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.76d12ed1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/violet-image-mypage.3af6f375.png\";","module.exports = __webpack_public_path__ + \"static/media/questack-home.011c14e8.png\";","module.exports = __webpack_public_path__ + \"static/media/questions.59dc74c8.png\";","import React from 'react'\nimport {Layout, Menu} from \"antd\";\nimport {Link} from \"react-router-dom\"\n\n\nexport const Header = () =>{\n    const { Header } = Layout;\n    const {SubMenu} = Menu;\n    return(\n        <Header>\n            <Menu\n                theme={\"dark\"}\n                mode={\"horizontal\"}\n            >\n                <Menu.Item>\n                    <Link to={\"/\"}>about</Link>\n                </Menu.Item>\n                <SubMenu\n                    title={\n                        <span>\n                            <span>products</span>\n                        </span>\n                    }>\n                    <Menu.Item>\n                        <Link to={\"/products/violet\"}>violet</Link>\n                    </Menu.Item>\n                    <Menu.Item>\n                        <Link to={\"/products/questack\"}>questack</Link>\n                    </Menu.Item>\n                </SubMenu>\n                <Menu.Item>\n                    <Link to={\"/contact\"}>Contact</Link>\n                </Menu.Item>\n            </Menu>\n        </Header>\n    );\n};\n","import React from 'react'\nimport {Card, Layout, Typography, Row, Col} from \"antd\";\n\nexport const About = () =>{\n    const {Title} = Typography;\n    const { Content, Footer } = Layout;\n\n    return(\n        <Layout>\n            <div\n                style={{\n                    width: \"100vw\",\n                    backgroundColor: \"#fff\"\n                }}\n            >\n                <div style={{ textAlign: \"center\" }}>\n                    <Title\n                        type=\"secondary\"\n                    >\n                        Hi! this is youthke's page\n                    </Title>\n                </div>\n            </div>\n            <Content>\n                <div style={{ margin: \"30px\" }}>\n                    <Row type=\"flex\" justify=\"center\">\n                        <Col span={12}>\n                            <Card>\n                                <Title level={5} style={{ marginLeft: 10, marginBottom: 25 }}>\n                                    自己紹介\n                                </Title>\n                                <Title level={2} style={{ marginLeft: 10, marginBottom: 25 }}>\n                                    基本情報\n                                </Title>\n                                <p>名前: 浅野 耀介</p>\n                                <p>年齢: 22</p>\n                                <p>趣味: ぷよぷよ, 散歩</p>\n                                <Title level={2} style={{ marginLeft: 10, marginBottom: 25 }}>\n                                    技術\n                                </Title>\n                                <ul>\n                                    <li>Go</li>\n                                    <li>React.js</li>\n                                    <li>Next.js</li>\n                                    <li>TypeScript</li>\n                                </ul>\n                                <Title level={2} style={{ marginLeft: 10, marginBottom: 25 }}>\n                                    紹介文\n                                </Title>\n                                <div>\n                                    学部2年の時にウェブアプリケーションを作ろうと大学の履修単位の管理するアプリをRailsで作成.\n                                    学部3年になって, 研究室に配属され, 春の課題として, 研究室の図書を管理するアプリをグループで開発. 秋学期では, 授業内で行われるプロジェクトに参加して航空管理システムをチームで開発した.　春の課題と授業でのプロジェクトはjsp servletを使用しました.\n                                    また,　1年ほどアジャイル開発を経験できるインターンに参加させていただき, Go, Reactの技術も持っています.\n                                    現在は, 研究室で後輩にウェブアプリケーション制作のゼミをしたり, 卒業生の先輩と一緒に\n                                    golangとNext.jsを使って開発したりしています.\n                                </div>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </Content>\n            <Footer/>\n        </Layout>\n    )\n}","import {Card, Col, Layout, Row, Typography} from \"antd\";\nimport React from \"react\";\nimport image1 from \"./../../img/violet-image-mypage.png\"\n\n\nexport const Violet = () =>{\n    const {Title} = Typography;\n    return (\n        <Layout>\n            <Layout.Content>\n                <div style={{margin:\"30px\"}}>\n                    <Typography.Title level={2}>violet</Typography.Title>\n                    <Row type={\"flex\"} justify={\"center\"}>\n                       <Col span={12}>\n                           <Card>\n                               <Title level={1}>violetとは...?</Title>\n                               Violetとは, 東京学芸大学櫨山研究室で行われるゼミの資料を管理するためのシステムです.\n                               <Typography.Title level={1}>\n                                   なぜ作成することになったか?\n                               </Typography.Title>\n                               <div>\n                                   <p>私の所属する研究室では月に一回進捗を報告するゼミを行います.</p>\n                                   <p>その際に,自分の進捗を報告するための資料を研究室のメンバーに共有することになっています.</p>\n                                  <p> 元々はメールで共有をしていたのですが,今回システムを作成して管理しやすくしました.</p>\n                               </div>\n                               <Title level={1}>使用した技術</Title>\n                               <div>\n                                   <ul>\n                                       <li>フロント側</li>\n                                       <ul>\n                                           <li>Next.js</li>\n                                           <li>Context API</li>\n                                           <li>React Hooks</li>\n                                           <li>TypeScript</li>\n                                           <li>Ant Design</li>\n                                           <li>ESLint</li>\n                                       </ul>\n                                       <li>バックエンド</li>\n                                       <ul>\n                                           <li>Golang</li>\n                                           <li>Layered architecture</li>\n                                           <li>gin</li>\n                                           <li>gorm</li>\n                                           <li>mysql</li>\n                                       </ul>\n                                       <li>CI/CD</li>\n                                       <ul>\n                                           <li>Jenkins</li>\n                                           <li>GitHub Actions</li>\n                                       </ul>\n                                       <li>インフラ技術</li>\n                                       <ul>\n                                           <li>Docker</li>\n                                           <li>nginx</li>\n                                       </ul>\n                                   </ul>\n                               </div>\n                               <div>\n                                   <Title>資料写真</Title>\n                                   MyPage画面\n                                   <img src={image1} width={640} height={360}/>\n                               </div>\n                           </Card>\n                       </Col>\n                    </Row>\n                </div>\n            </Layout.Content>\n        </Layout>\n    );\n};\n","import {Card, Col, Layout, Row, Typography} from \"antd\";\nimport React from \"react\";\n\nexport const Contact = () => {\n    const {Title} = Typography;\n    return(\n        <Layout>\n            <Layout.Content>\n                <div style={{margin: \"30px\"}}>\n                    <Row type={\"flex\"} justify={\"center\"}>\n                       <Col span={12}>\n                           <Card>\n                               <Title level={3}>Contact</Title>\n                               <p><a href={\"https://twitter.com/EkerqY3\"}>Twitter</a></p>\n                               <p><a href={\"https://github.com/youthke\"}>GitHub</a></p>\n                           </Card>\n                       </Col>\n                    </Row>\n                </div>\n            </Layout.Content>\n        </Layout>\n    )\n};","import {Card, Col, Layout, Row, Typography} from \"antd\";\nimport React from \"react\";\nimport homeImage from \"./../../img/questack-home.png\"\nimport questionImage from \"./../../img/questions.png\"\n\n\nexport const Questack = () =>{\n    const {Title} = Typography;\n    return (\n        <Layout>\n            <Layout.Content>\n                <div style={{margin:\"30px\"}}>\n                    <Typography.Title level={2}>questack</Typography.Title>\n                    <Row type={\"flex\"} justify={\"center\"}>\n                        <Col span={12}>\n                            <Card>\n                                <Title level={1}>questackとは...?</Title>\n                                URLがわかるだけで質問ができる質問募集所\n                                <Typography.Title level={1}>\n                                    なぜ作成することになったか?\n                                </Typography.Title>\n                                <div>\n                                    <p>コロナウイルの影響でなんでもリモート化. </p>\n                                    <p>zoomというURLだけで参加できる会議をみて, URLを知ってる人なら参加できる質問募集所が頭に浮かんだ</p>\n                                    <p>自身の技術を公開してみようと考えました.</p>\n                                    <p>サーバーにはまだあげていません.</p>\n                                </div>\n                                <Title level={1}>使用した技術</Title>\n                                <div>\n                                    <ul>\n                                        <li>フロント側</li>\n                                        <ul>\n                                            <li>Next.js</li>\n                                            <li>Context API</li>\n                                            <li>React Hooks</li>\n                                            <li>TypeScript</li>\n                                            <li>Ant Design</li>\n                                        </ul>\n                                        <li>バックエンド</li>\n                                        <ul>\n                                            <li>Golang</li>\n                                            <li>Layered architecture</li>\n                                            <li>gin</li>\n                                            <li>gorm</li>\n                                            <li>mysql</li>\n                                        </ul>\n                                        <li>インフラ技術</li>\n                                        <ul>\n                                            <li>Docker</li>\n                                        </ul>\n                                    </ul>\n                                </div>\n                                <div>\n                                    <Title>ソースコード</Title>\n                                    <p><a href={\"https://github.com/youthke/questack_web\"}>フロントエンド</a></p>\n                                    <p><a href={\"https://github.com/youthke/questack-api\"}>バックエンド</a></p>\n                                </div>\n                                <div>\n                                    <Title>資料写真</Title>\n                                    <div>\n                                        ownerのhome\n                                        <img src={homeImage} width={640} height={360}/>\n                                    </div>\n                                    <div>\n                                        stackの質問一覧\n                                        <img src={questionImage} width={640} height={360}/>\n                                    </div>\n                                </div>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </Layout.Content>\n        </Layout>\n    );\n};\n","import React from 'react';\nimport {HashRouter as Router,Route, Switch} from 'react-router-dom'\n\nimport { Header } from \"./component/Header\";\nimport {Layout} from \"antd\";\nimport {About} from \"./component/About\";\nimport \"./index.css\"\nimport {Violet} from \"./component/products/Violet\";\nimport {Contact} from \"./component/Contact\";\nimport {Questack} from \"./component/products/Questack\";\n\n\nfunction App() {\n  return (\n      <Layout>\n          <Router>\n              <Header/>\n              <Switch>\n                  <Route path={\"/contact\"} component={Contact}/>\n                  <Route path={\"/products/violet\"} component={Violet}/>\n                  <Route path={\"/products/questack\"} component={Questack}/>\n                  <Route path={\"/\"} component={About}/>\n              </Switch>\n          </Router>\n      </Layout>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}